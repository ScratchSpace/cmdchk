import codecs
import os
import sys

from setuptools import setup, find_packages
from subprocess import Popen, PIPE

def long_description():
    with open('README.rst') as readme:
        return readme.read()

def install_requires():
    packages = ['setproctitle']
    if sys.version_info[0] == 2 and sys.version_info[1] == 6:
        packages.append('argparse')
    return packages

def version():
    version_py = os.path.join(os.path.dirname(__file__), 'cmdchk', 'version.py')

    try:
        proc = Popen(['/usr/bin/git', 'describe'], stdout=PIPE)
        output, _ = proc.communicate()
        if proc.returncode:
            raise OSError
        output = output.decode('utf-8')
        version_git = output.rstrip()[1:]
    except OSError:
        with codecs.open(version_py, encoding='utf-8') as verfile:
            version_git = verfile.read().strip() \
                                 .split(' = ')[-1] \
                                 .replace("'", '')

    version_msg = '# Generated by setup.py from git tag.'
    with open(version_py, 'w') as verfile:
        verfile.write(version_msg + "\n__version__ = '" + version_git + "'\n")

    return version_git

setup(
    name='cmdchk',
    version=version(),
    description='A monitoring program that responds over HTTP.',
    long_description=long_description(),
    url='http://git.launchbrigade.com/emarks/cmdchk',
    author='Ellison Marks',
    author_email='emarks@scratchspace.com',
    license='NCSA',
    classifiers=[
        'Development Status :: 4 - Beta',
        'Intended Audience :: System Administrators',
        'License :: OSI Approved :: University of Illinois/NCSA Open Source License',
        'Operating System :: POSIX :: Linux',
        'Programming Language :: Python :: 2',
        'Programming Language :: Python :: 2.6',
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3',
        'Topic :: Internet :: WWW/HTTP',
        'Topic :: System :: Monitoring',
    ],
    keywords='cluster monitor http',
    packages=find_packages(),
    install_requires=install_requires(),
    platforms=['GNU/Linux'],
    entry_points={
        'console_scripts': [
            'cmdchk_wrapper = cmdchk:wrapper',
            'cmdchk_server = cmdchk:run_server',
        ]
    },
)
